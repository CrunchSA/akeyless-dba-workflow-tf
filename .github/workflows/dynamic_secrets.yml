name: Secrets
# Run this workflow every time a new commit pushed to your repository.
on: 
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
jobs:
  
    fetch_aws_dynamic_secrets:
          runs-on: ubuntu-latest
          name: Fetch AWS dynamic secrets
          #---------Required---------#
          permissions: # Must change the job token permissions to use JWT auth
            id-token: write
            contents: read
          #--------------------------#       
          steps:
          - name: Fetch dynamic secrets from AKeyless
            id: fetch-dynamic-secrets
            uses: LanceMcCarthy/akeyless-action@v3
            with:
              access-id: ${{ secrets.AKEYLESS_ACCESS_ID }} # Looks like p-fq3afjjxv839
              dynamic-secrets: '{"/AWS/aws_user":"aws_dynamic_secrets"}'
              
      # **** KEY TAKEAWAY - EXPORT DYNAMIC SECRET's KEYS TO ENV VARS *****
          - name: Export Secrets to Environment
            run: |
              echo '${{ steps.fetch-dynamic-secrets.outputs.aws_dynamic_secrets }}' | jq -r 'to_entries|map("AWS_\(.key)=\(.value|tostring)")|.[]' >> $GITHUB_ENV
      
      # You can now access each secret separately as environment variables
          - name: Verify Vars
            run: |
              echo "access_key_id: ${{ env.AWS_access_key_id }}"
              echo "id: ${{ env.AWS_id }}"
              echo "secret_access_key: ${{ env.AWS_secret_access_key }}"
              echo "security_token: ${{ env.AWS_security_token }}"
              echo "ttl_in_minutes: ${{ env.AWS_ttl_in_minutes }}"
              echo "type: ${{ env.AWS_type }}"
              echo "user: ${{ env.AWS_user }}"

              export AWS_ACCESS_KEY_ID=" ${{ env.AWS_access_key_id }}"
              export AWS_SECRET_ACCESS_KEY="${{ env.AWS_secret_access_key }}"

              outputs:
                access_key_id: ${{ env.AWS_access_key_id }}
                secret_access_key: ${{ env.AWS_secret_access_key }}
    terraform:
        runs-on: ubuntu-latest
      
        steps:
          - uses: actions/checkout@v2
      
          - name: Setup Terraform
            uses: hashicorp/setup-terraform@v2

          - name: Terraform Init
            run: |
              echo "access_key_id: ${{ needs.outputs.fetch_aws_dynamic_secrets.access_key_id }}"
              echo "secret_access_key: ${{ needs.outputs.fetch_aws_dynamic_secrets.secret_access_key }}"
              
              export AWS_ACCESS_KEY_ID=${{ needs.outputs.fetch_aws_dynamic_secrets.access_key_id }}
              export AWS_SECRET_ACCESS_KEY=${{ needs.outputs.fetch_aws_dynamic_secrets.secret_access_key }}

      
              terraform init
            env:
              AWS_ACCESS_KEY_ID: ${{ env.AWS_access_key_id }}
              AWS_SECRET_ACCESS_KEY: ${{ env.AWS_secret_access_key }}

      
          - name: Terraform Plan
            run: |
              export AWS_ACCESS_KEY_ID= ${{ env.AWS_access_key_id }}
              export AWS_SECRET_ACCESS_KEY= ${{ env.AWS_secret_access_key }}

      
              terraform plan 
            env:
              AWS_ACCESS_KEY_ID: ${{ env.AWS_access_key_id }}
              AWS_SECRET_ACCESS_KEY: ${{ env.AWS_secret_access_key }}
                
          - name: Terraform Apply
            run: |
              export AWS_ACCESS_KEY_ID=${{ env.AWS_access_key_id }}
              export AWS_SECRET_ACCESS_KEY=${{ env.AWS_secret_access_key }}
      
              terraform apply
            env:
              AWS_ACCESS_KEY_ID: ${{ env.AWS_access_key_id }}
              AWS_SECRET_ACCESS_KEY: ${{ env.AWS_secret_access_key }}

    